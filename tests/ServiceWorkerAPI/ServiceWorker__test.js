// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Stdlib_Option from "@rescript/runtime/lib/es6/Stdlib_Option.js";
import * as Primitive_option from "@rescript/runtime/lib/es6/Primitive_option.js";

self.addEventListener("push", event => {
  console.log("received push event");
  let data = event.data;
  let match;
  if (data !== undefined) {
    let match$1 = Primitive_option.valFromOption(data).json();
    if (typeof match$1 === "object" && match$1 !== null && !Array.isArray(match$1)) {
      let title = match$1.title;
      if (typeof title === "string") {
        let body = match$1.body;
        match = typeof body === "string" ? [
            title,
            body
          ] : [
            "???",
            "???"
          ];
      } else {
        match = [
          "???",
          "???"
        ];
      }
    } else {
      match = [
        "???",
        "???"
      ];
    }
  } else {
    match = [
      "???",
      "???"
    ];
  }
  event.waitUntil(self.fetch("https://rescript-lang.org"));
  self.registration.showNotification(match[0], {
    body: match[1],
    icon: "/icon.png",
    data: 17,
    actions: [
      {
        action: "open",
        title: "Open"
      },
      {
        action: "close",
        title: "Close"
      }
    ],
    vibrate: [
      200,
      50,
      200,
      50,
      400
    ]
  });
});

self.addEventListener("notificationclick", event => {
  console.log(`notification clicked: ` + event.action);
  event.notification.close();
  Stdlib_Option.forEach(Stdlib_Option.flatMap(event.notification.data, data => {
    if (typeof data === "number") {
      return data.toString();
    }
    
  }), id => {
    self.clients.open(`https://mywebsite.com/mydata/` + id);
  });
});

/*  Not a pure module */
